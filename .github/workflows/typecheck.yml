name: typecheck

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  ts-typecheck:
    name: Type-Check
    if: ${{ github.actor != 'github-actions' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Fetch latest Node.js 22.x
        run: |
          curl -s https://nodejs.org/dist/index.json | jq -r '[.[] | select(.version | test("^v22\\.\\d+\\.\\d+$"))][0].version' > .nvmrc
          echo "Using Node version: $(cat .nvmrc)"

      - name: Setup latest Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Setup npm 11.x
        run: |
          npm i -g npm@^11
          echo "npm version: $(npm -v)"
          node -e "const v=require('child_process').execSync('npm -v').toString().trim(); if(!/^11\./.test(v)){console.error('Expected npm 11.x, got', v); process.exit(1);} console.log('npm 11 OK');"

      - name: Ensure native build deps
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            build-essential python3 python3-dev libusb-1.0-0-dev libudev-dev

      - name: Disable root postinstall (CI typecheck)
        run: |
          node -e "const fs=require('fs');const p=JSON.parse(fs.readFileSync('package.json','utf8'));if(p.scripts&&p.scripts.postinstall){p.scripts._postinstall=p.scripts.postinstall;delete p.scripts.postinstall;fs.writeFileSync('package.json',JSON.stringify(p,null,2));console.log('postinstall disabled');}else{console.log('no postinstall found');}"

      - name: Clean & install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install --no-audit --prefer-offline

      - name: Run TypeScript type-check
        run: npm run typecheck
